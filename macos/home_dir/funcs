HORIZONTALLINE="-------------------------------------------------------------------------------------------------"

# Helper funcs
update_todo() {
    string=$1 
    done_string="[X]"
    echo "${string/\[ \]/$done_string}"
}
escape_todo() {
    string=$1 
    escaped_string="\[ \]"
    echo "${string/\[ \]/$escaped_string}"
}

#---------------------------------------------------------------------------------------------------------
#                                   TODO
#---------------------------------------------------------------------------------------------------------
todo () {
        # List todo's with a number to select
        if [[ $# -lt 1 ]]
        then
                echo $HORIZONTALLINE
                x=1
                grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} "#TODO\[ \]" $notes/* -r -h | while read -r line; do
                    task=$(basename "$line")
                    tasks[$x]=$task
                    echo "$x $line"
                    x=$(( $x + 1 ))
                done
                echo $HORIZONTALLINE
                return 0
        else
                todo="${@:1}"
                year=`date +'%Y'`
                month=`date +'%m'`
                day=`date +'%d'`
                note_path=$notes/$year/$month/$day.md
                echo "#TODO[ ]: $todo" >> $note_path
                return 0
        fi
}

project.todo () {
        project=$1
        project_path=$work/$project/notes/
        if [[ $# -lt 2 ]]
        then
                echo $HORIZONTALLINE
                x=1
                grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} "#TODO\[ \]" $project_path/* -r -h | while read -r line; do
                    task=$(basename "$line")
                    tasks[$x]=$task
                    echo "$x $line"
                    x=$(( $x + 1 ))
                done
                echo $HORIZONTALLINE
                return 0
        else
                todo="${@:2}"
                year=`date +'%Y'`
                month=`date +'%m'`
                day=`date +'%d'`
                note_path=~/Work/$project/notes/$year/$month/$day.md
                echo "#TODO[ ]: $todo" >> $note_path
                return 0
        fi
}


dom.todo () {
    project.todo "dom" $@
}

stor.todo () {
    project.todo "stor" $@
}

ship.todo () {
    project.todo "ship" $@
}

viz.todo () {
    project.todo "viz" $@
}


#--------------------------------------------------------------------------------------------------------
#                                   MARK_DONE
#--------------------------------------------------------------------------------------------------------
mark_done() {
    # List todo's with a number to select
    todo
    echo "Which task is complete?"
    read -r tasknum
    done_task=$tasks[$tasknum]
    marked_done_task=$(update_todo "$done_task")
    escaped_task=$(escape_todo "$done_task")
    LC_ALL=C find $notes -type f -exec sed -i "" "s/$escaped_task/$marked_done_task/" {} \;
    return 0
    # Mark the item as complete
}

project.mark_done() {
    # List todo's with a number to select
    project.todo $@
    echo "Which task is complete?"
    read -r tasknum
    done_task=$tasks[$tasknum]
    marked_done_task=$(update_todo "$done_task")
    escaped_task=$(escape_todo "$done_task")
    LC_ALL=C find $project_path -type f -exec sed -i "" "s/$escaped_task/$marked_done_task/" {} \;
    return 0
    # Mark the item as complete
}

dom.mark_done () {
    project.mark_done "dom" $@
}

stor.mark_done () {
    project.mark_done "stor" $@
}

ship.mark_done () {
    project.mark_done "ship" $@
}

viz.mark_done () {
    project.mark_done "viz" $@
}


#---------------------------------------------------------------------------------------------------------
#                                   LIST_DONE 
#---------------------------------------------------------------------------------------------------------

list_done() {
    grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} "#TODO\[X\]" $notes/* -r -h
    return 0
}

project.list_done () {
    project=$1
    project_path=$work/$project/notes/
    grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn} "#TODO\[X\]" $project_path* -r -h
    return 0
}

dom.list_done () {
    project.list_done "dom" $@
}

stor.list_done () {
    project.list_done "stor" $@
}

ship.list_done () {
    project.list_done "ship" $@
}

viz.list_done () {
    project.list_done "viz" $@
}

# Easily extract local ip address
printip() { (awk '{print $2}' <(ifconfig en0 | grep 'inet ')); }

# Use lf to switch directories and bind it to ctrl-o
lfcd () {
    tmp="$(mktemp)"
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
    fi
}
bindkey -s '^o' 'lfcd\n'
